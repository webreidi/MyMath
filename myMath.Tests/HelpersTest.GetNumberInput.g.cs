using System.IO;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework;
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;

namespace myMath.Tests
{
    public partial class HelpersTest
    {

[TestMethod]
[PexGeneratedBy(typeof(HelpersTest))]
public void GetNumberInput43()
{
    int i;
    i = this.GetNumberInput((string)null);
    PexAssert.AreEqual<int>(0, i);
}

[TestMethod]
[PexGeneratedBy(typeof(HelpersTest))]
public void GetNumberInput879()
{
    int i;
    i = this.GetNumberInput("\0");
    PexAssert.AreEqual<int>(0, i);
}

[TestMethod]
[PexGeneratedBy(typeof(HelpersTest))]
public void GetNumberInput381()
{
    int i;
    i = this.GetNumberInput("0");
    PexAssert.AreEqual<int>(0, i);
}

[TestMethod]
[PexGeneratedBy(typeof(HelpersTest))]
public void GetNumberInput90()
{
    int i;
    i = this.GetNumberInput("");
    PexAssert.AreEqual<int>(0, i);
}

[TestMethod]
[PexGeneratedBy(typeof(HelpersTest))]
public void GetNumberInput263()
{
    int i;
    i = this.GetNumberInput(":");
    PexAssert.AreEqual<int>(0, i);
}

[TestMethod]
[PexGeneratedBy(typeof(HelpersTest))]
public void GetNumberInput241()
{
    int i;
    i = this.GetNumberInput("00");
    PexAssert.AreEqual<int>(0, i);
}

[TestMethod]
[PexGeneratedBy(typeof(HelpersTest))]
public void GetNumberInput924()
{
    int i;
    i = this.GetNumberInput("-");
    PexAssert.AreEqual<int>(0, i);
}

[TestMethod]
[PexGeneratedBy(typeof(HelpersTest))]
public void GetNumberInput711()
{
    using (PexPConsoleInContext.Create())
    {
      int i;
      IPexChoiceRecorder choices = PexChoose.Replay.Setup();
      choices.DefaultSession
          .At(2, "close", (object)true);
      i = this.GetNumberInput("");
      PexAssert.AreEqual<int>(0, i);
    }
}

[TestMethod]
[PexGeneratedBy(typeof(HelpersTest))]
public void GetNumberInput71101()
{
    using (PexPConsoleInContext.Create())
    {
      int i;
      IPexChoiceRecorder choices = PexChoose.Replay.Setup();
      choices.DefaultSession
          .At(0, "peeked", (object)true)
          .At(1, "peek", (object)' ')
          .At(3, "line", "");
      i = this.GetNumberInput("");
      PexAssert.AreEqual<int>(0, i);
    }
}

[TestMethod]
[PexGeneratedBy(typeof(HelpersTest))]
public void GetNumberInput71102()
{
    using (PexPConsoleInContext.Create())
    {
      int i;
      IPexChoiceRecorder choices = PexChoose.Replay.Setup();
      choices.DefaultSession
          .At(3, "line", "");
      i = this.GetNumberInput("");
      PexAssert.AreEqual<int>(0, i);
    }
}

[TestMethod]
[PexGeneratedBy(typeof(HelpersTest))]
public void GetNumberInput71103()
{
    using (PexPConsoleInContext.Create())
    {
      int i;
      IPexChoiceRecorder choices = PexChoose.Replay.Setup();
      choices.DefaultSession
          .At(3, "line", "-0");
      i = this.GetNumberInput("");
      PexAssert.AreEqual<int>(0, i);
    }
}

[TestMethod]
[PexGeneratedBy(typeof(HelpersTest))]
public void GetNumberInput71104()
{
    using (PexPConsoleInContext.Create())
    {
      int i;
      IPexChoiceRecorder choices = PexChoose.Replay.Setup();
      choices.DefaultSession
          .At(3, "line", "-000");
      i = this.GetNumberInput("");
      PexAssert.AreEqual<int>(0, i);
    }
}
    }
}
